kind: Service
apiVersion: v1
metadata:
  name: ${appName}-service
  namespace: ${namespace}
spec:
  ports:
    - protocol: TCP
      port: ${port}
      name: web
  selector:
    segma-app: ${appName}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${appName}-ingress
  namespace: ${namespace}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${appName}.${namespace}.seos.segma.tech
    http:
      paths:
        - backend:
            serviceName: ${appName}-service
            servicePort: ${port}
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: ${appName}
  namespace: ${namespace}
  labels:
    segma-app: ${appName}
spec:
  replicas: 1
  selector:
    matchLabels:
      segma-app: ${appName}
  template:
    metadata:
      labels:
        segma-app: ${appName}
        name: ${appName}
    spec:
      terminationGracePeriodSeconds: 60
      volumes:
        - name: varlibdocker
          emptyDir: {}
        - name: dindconfig
          secret:
            secretName: docker-cfg
        - name: rundind
          hostPath:
            path: /var/run/docker.sock
      containers:
      - image: ${repository}/${org}/${imageName}:${version}
        args:
          - dockerd
          - -H tcp://0.0.0.0:2376
          - --insecure-registry=harbor.seos.segma.tech
          - java
          - -Djava.security.egd=file:/dev/./urandom
          - -jar
          - /app.jar
        name: segma-app
        securityContext:
          privileged: true
        ports:
        - containerPort: ${port}
          name: web
        - containerPort: 2376
          name: dind
        volumeMounts:
          - name: varlibdocker
            mountPath: /var/lib/docker
          - name: dindconfig
            mountPath: /root/.docker/config.json
            readOnly: true
          - name: rundind
            mountPath: /var/run/docker.sock
